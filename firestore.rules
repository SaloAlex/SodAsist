rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Funciones auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.rol == 'admin';
    }

    function isSodero() {
      return isAuthenticated()
             && exists(/databases/$(database)/documents/users/$(request.auth.uid))
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.rol == 'sodero';
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.rol;
    }

    // Regla global para permitir acceso a usuarios autenticados
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // Reglas específicas para usuarios
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated()
                   && request.auth.uid == userId
                   && request.resource.data.rol in ['admin', 'sodero'];
      allow update: if isAuthenticated()
                   && (request.auth.uid == userId || isAdmin());
    }

    // Reglas para clientes
    match /clientes/{clienteId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isAdmin() || isSodero());
    }

    // Reglas para entregas
    match /entregas/{entregaId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isAdmin() || isSodero());
    }
    
    // Pagos - authenticated users can read and write
    match /pagos/{pagoId} {
      allow read, write: if request.auth != null;
    }
    
    // KPIs - authenticated users can read, only functions can write
    match /kpis/{kpiId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // ───────── inventarioVehiculo ─────────
    match /inventarioVehiculo/{invId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() 
                  && (isAdmin() || isSodero());
    }

    // Regla para inventarioVehiculo en cualquier subruta (por si acaso)
    match /{path=**}/inventarioVehiculo/{invId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() 
                  && (isAdmin() || isSodero());
    }
  }
}
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funciones auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserRole(userId) {
      let userDoc = get(/databases/$(database)/documents/users/$(userId));
      return userDoc != null ? userDoc.data.rol : null;
    }

    function isAdmin(userId) {
      return getUserRole(userId) == 'admin';
    }

    // Reglas para usuarios - Simplificadas para permitir el primer registro
    match /users/{userId} {
      allow create: if isAuthenticated() && 
        (request.auth.uid == userId || // Usuario creando su propio documento
         request.resource.data.rol == 'admin'); // Permitir creación de admin
      allow read, update, delete: if isAuthenticated() && 
        (isOwner(userId) || // Usuario puede ver/editar sus propios datos
         isAdmin(request.auth.uid)); // Admin puede ver/editar todos los usuarios
    }

    // Reglas para tenants - Simplificadas
    match /tenants/{tenantId} {
      allow create: if isAuthenticated() &&
        request.auth.uid == tenantId; // Solo el usuario puede crear su propio tenant
      allow read, write: if isAuthenticated() && 
        (request.auth.uid == tenantId || // Owner del tenant (usando email)
         isAdmin(request.auth.uid)); // Admin del sistema
    }

    // Reglas para datos de tenant
    match /tenants/{tenantId}/{collection}/{document=**} {
      allow read, write: if isAuthenticated() && 
        (request.auth.uid == tenantId || // Owner del tenant (usando email)
         isAdmin(request.auth.uid)); // Admin del sistema
    }

    // Reglas para colecciones globales (compatibilidad)
    match /{collection}/{document=**} {
      allow read, write: if isAuthenticated() && 
        (collection == 'users' || // Usuarios (manejado arriba)
         collection == 'tenants'); // Tenants (manejado arriba)
    }

    // Reglas específicas para colecciones comunes en tenants (backup)
    match /tenants/{tenantId}/clientes/{document=**} {
      allow read, write: if isAuthenticated() && 
        (request.auth.uid == tenantId || // Owner del tenant
         isAdmin(request.auth.uid)); // Admin del sistema
    }

    match /tenants/{tenantId}/entregas/{document=**} {
      allow read, write: if isAuthenticated() && 
        (request.auth.uid == tenantId || // Owner del tenant
         isAdmin(request.auth.uid)); // Admin del sistema
    }

    match /tenants/{tenantId}/inventario/{document=**} {
      allow read, write: if isAuthenticated() && 
        (request.auth.uid == tenantId || // Owner del tenant
         isAdmin(request.auth.uid)); // Admin del sistema
    }

    match /tenants/{tenantId}/productos/{document=**} {
      allow read, write: if isAuthenticated() &&
        (request.auth.uid == tenantId || // Owner del tenant
         isAdmin(request.auth.uid)); // Admin del sistema
    }

    match /tenants/{tenantId}/movimientosInventario/{document=**} {
      allow read, write: if isAuthenticated() &&
        (request.auth.uid == tenantId || // Owner del tenant
         isAdmin(request.auth.uid)); // Admin del sistema
    }

    match /tenants/{tenantId}/ajustesInventario/{document=**} {
      allow read, write: if isAuthenticated() &&
        (request.auth.uid == tenantId || // Owner del tenant
         isAdmin(request.auth.uid)); // Admin del sistema
    }

    match /tenants/{tenantId}/inventarioVehicular/{document=**} {
      allow read, write: if isAuthenticated() &&
        (request.auth.uid == tenantId || // Owner del tenant
         isAdmin(request.auth.uid)); // Admin del sistema
    }

    match /tenants/{tenantId}/categoriasProductos/{document=**} {
      allow read, write: if isAuthenticated() &&
        (request.auth.uid == tenantId || // Owner del tenant
         isAdmin(request.auth.uid)); // Admin del sistema
    }

    // Regla específica para colección visitas - IMPORTANTE para RutaHoy
    match /tenants/{tenantId}/visitas/{document=**} {
      allow read, write: if isAuthenticated() &&
        (request.auth.uid == tenantId || // Owner del tenant
         getUserRole(request.auth.uid) in ['admin', 'sodero', 'manager', 'owner'] || // Roles permitidos
         isAdmin(request.auth.uid)); // Admin del sistema
    }
  }
}